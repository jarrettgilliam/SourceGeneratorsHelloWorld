using Microsoft.CodeAnalysis;

namespace SourceGenerator;

// Using the HelloIncrementalGenerator
// [Generator(LanguageNames.CSharp)]
internal sealed class HelloSourceGenerator : ISourceGenerator
{
    public void Execute(GeneratorExecutionContext context)
    {
        // Find the main method
        if (context.Compilation.GetEntryPoint(context.CancellationToken) is not { } mainMethod)
        {
            return;
        }

        // Build up the source code
        // lang=c#
        string source = $$"""
            // <auto-generated/>

            namespace {{mainMethod.ContainingNamespace.ToDisplayString()}};

            public static partial class {{mainMethod.ContainingType.Name}}
            {
                static void HelloFrom(string name) =>
                    global::System.Console.WriteLine($"Generator says: Hi from '{name}'");
            }
            """;

        string hintName = string.Join(
            ".",
            mainMethod.ContainingNamespace.ToDisplayString(),
            mainMethod.ContainingType.Name,
            "g.cs");

        // Add the source code to the compilation
        context.AddSource(hintName, source);
    }

    public void Initialize(GeneratorInitializationContext context)
    {
        // No initialization required for this one
    }
}